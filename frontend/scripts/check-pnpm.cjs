#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è pnpm –∫–∞–∫ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
 * –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ npm –∏–ª–∏ yarn
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

const RED = '\x1b[31m';
const YELLOW = '\x1b[33m';
const GREEN = '\x1b[32m';
const RESET = '\x1b[0m';

function checkPackageManager() {
  const userAgent = process.env.npm_config_user_agent;
  
  if (!userAgent) {
    console.log(`${GREEN}‚úì${RESET} Package manager check passed`);
    return;
  }

  const isUsingPnpm = userAgent.startsWith('pnpm');
  const isUsingNpm = userAgent.startsWith('npm');
  const isUsingYarn = userAgent.startsWith('yarn');

  if (isUsingNpm) {
    console.error(`${RED}‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ npm –∑–∞–ø—Ä–µ—â–µ–Ω–æ!${RESET}`);
    console.error(`${YELLOW}üì¶ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ pnpm:${RESET}`);
    console.error('   pnpm install');
    console.error('   pnpm add <package>');
    console.error('   pnpm remove <package>');
    process.exit(1);
  }

  if (isUsingYarn) {
    console.error(`${RED}‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ yarn –∑–∞–ø—Ä–µ—â–µ–Ω–æ!${RESET}`);
    console.error(`${YELLOW}üì¶ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ pnpm:${RESET}`);
    console.error('   pnpm install');
    console.error('   pnpm add <package>');
    console.error('   pnpm remove <package>');
    process.exit(1);
  }

  if (isUsingPnpm) {
    console.log(`${GREEN}‚úì${RESET} –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è pnpm - –æ—Ç–ª–∏—á–Ω–æ!`);
    return;
  }

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è lock —Ñ–∞–π–ª–æ–≤ –¥—Ä—É–≥–∏—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
  const projectRoot = process.cwd();
  const packageLockPath = path.join(projectRoot, 'package-lock.json');
  const yarnLockPath = path.join(projectRoot, 'yarn.lock');

  if (fs.existsSync(packageLockPath)) {
    console.error(`${RED}‚ùå –ù–∞–π–¥–µ–Ω package-lock.json!${RESET}`);
    console.error(`${YELLOW}üßπ –£–¥–∞–ª–∏—Ç–µ –µ–≥–æ –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ pnpm:${RESET}`);
    console.error('   rm package-lock.json');
    console.error('   pnpm install');
    process.exit(1);
  }

  if (fs.existsSync(yarnLockPath)) {
    console.error(`${RED}‚ùå –ù–∞–π–¥–µ–Ω yarn.lock!${RESET}`);
    console.error(`${YELLOW}üßπ –£–¥–∞–ª–∏—Ç–µ –µ–≥–æ –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ pnpm:${RESET}`);
    console.error('   rm yarn.lock');
    console.error('   pnpm install');
    process.exit(1);
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è pnpm –≤ —Å–∏—Å—Ç–µ–º–µ
function checkPnpmInstalled() {
  try {
    execSync('pnpm --version', { stdio: 'ignore' });
  } catch (error) {
    console.error(`${RED}‚ùå pnpm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${RESET}`);
    console.error(`${YELLOW}üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ pnpm:${RESET}`);
    console.error('   npm install -g pnpm');
    console.error('   # –∏–ª–∏');
    console.error('   curl -fsSL https://get.pnpm.io/install.sh | sh -');
    process.exit(1);
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
checkPnpmInstalled();
checkPackageManager(); 